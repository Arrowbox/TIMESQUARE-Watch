// "Pie chart" time display.

PROGMEM uint8_t
 wedge[] = {
  0x3D,0x21,0x01,0x00,0x7C,0x21,0x01,0x00,0xC7,0x21,0x01,0x00,0xFA,0x33,0x01,
  0x00,0xFA,0x69,0x01,0x00,0xF7,0x9E,0x01,0x00,0xFA,0xAE,0x0A,0x00,0xF7,0xB0,
  0x0F,0x00,0xFA,0xB0,0x0F,0x00,0xFA,0xAC,0x0F,0x00,0xF7,0xAA,0x0E,0x00,0xF5,
  0xAC,0x10,0x00,0xFC,0xB0,0x10,0x00,0xFA,0xAE,0x11,0x00,0xFC,0xB0,0x10,0x00,
  0xF7,0xAE,0x10,0x00,0x40,0x3F,0x3B,0x01,0x6A,0x40,0x3B,0x01,0x9E,0x40,0x3B,
  0x01,0xDF,0x3F,0x3B,0x01,0xFF,0x56,0x3B,0x01,0xFF,0x8F,0x3B,0x01,0xFF,0xD7,
  0x3F,0x01,0xFF,0xFC,0x6A,0x01,0xFF,0xFF,0xBA,0x01,0xFF,0xFF,0xED,0x06,0xFF,
  0xFF,0xF2,0x0E,0xFF,0xFF,0xF5,0x10,0xFF,0xFF,0xF5,0x0F,0xFF,0xFF,0xF5,0x10,
  0xFF,0xFF,0xF5,0x0F,0xFF,0xFF,0xF5,0x10,0x3F,0x40,0x3F,0x21,0x5A,0x40,0x3F,
  0x20,0x77,0x3F,0x40,0x21,0x96,0x3F,0x3F,0x21,0xBC,0x3F,0x3F,0x21,0xE3,0x44,
  0x3F,0x21,0xF7,0x58,0x3F,0x20,0xFF,0x7F,0x3F,0x20,0xFF,0xB8,0x45,0x20,0xFF,
  0xE6,0x64,0x21,0xFF,0xFF,0xA4,0x2B,0xFF,0xFF,0xE8,0x58,0xFF,0xFF,0xFF,0x9A,
  0xFF,0xFF,0xFF,0xB0,0xFF,0xFF,0xFF,0xAC,0xFF,0xFF,0xFF,0xB0,0x3F,0x3F,0x3F,
  0x3C,0x4B,0x3F,0x3F,0x3D,0x52,0x3F,0x40,0x3C,0x5C,0x3F,0x3F,0x3D,0x67,0x40,
  0x3F,0x3C,0x73,0x3F,0x3F,0x3D,0x81,0x40,0x40,0x3D,0x91,0x40,0x3F,0x3D,0xA8,
  0x40,0x3F,0x3D,0xB8,0x48,0x3F,0x3C,0xC7,0x5A,0x3F,0x3C,0xD5,0x7A,0x42,0x3D,
  0xE3,0x98,0x60,0x3D,0xF0,0xBF,0x91,0x67,0xFA,0xE1,0xCA,0xA8,0xFF,0xFF,0xFF,
  0xFA },
 digits12[12][6] = { 
  { B00000000, B10110000, B10010000, B10100000, B10110000, B00000000 },
  { B01100000, B00100000, B00100000, B00100000, B00100000, B00100000 },
  { B01100000, B10010000, B00010000, B01100000, B10000000, B11110000 },
  { B11100000, B00010000, B01100000, B00010000, B10010000, B01100000 },
  { B10000000, B10100000, B10100000, B11110000, B00100000, B00100000 },
  { B11110000, B10000000, B11100000, B00010000, B10010000, B01100000 },
  { B01100000, B10000000, B11100000, B10010000, B10010000, B01100000 },
  { B11110000, B00010000, B00100000, B00100000, B01000000, B01000000 },
  { B01100000, B10010000, B01100000, B10010000, B10010000, B01100000 },
  { B01100000, B10010000, B10010000, B01110000, B00010000, B01100000 },
  { B00000000, B10111000, B10101000, B10101000, B10111000, B00000000 },
  { B00000000, B10010000, B10010000, B10010000, B10010000, B00000000 } },
 digits24[24][5] = {
  { B00000000, B11111100, B10110100, B10110100, B11111100 },
  { B00000000, B11101000, B10101000, B10101000, B11101000 },
  { B00000000, B11101100, B10100100, B10101000, B11101100 },
  { B00001100, B11100100, B10101100, B10100100, B11101100 },
  { B00000000, B11101000, B10101000, B10101100, B11100100 },
  { B00000000, B11101100, B10101000, B10100100, B11101100 },
  { B00000000, B11101100, B10101000, B10101100, B11101100 },
  { B00000000, B11101100, B10100100, B10100100, B11100100 },
  { B00000000, B11101100, B10101100, B10101100, B11101100 },
  { B00000000, B11101100, B10101100, B10100100, B11101100 },
  { B00000000, B01011100, B01010100, B01010100, B01011100 },
  { B00000000, B01001000, B01001000, B01001000, B01001000 },
  { B00000000, B01011000, B01001000, B01010000, B01011000 },
  { B00011000, B01001000, B01011000, B01001000, B01011000 },
  { B00000000, B01010000, B01010000, B01011000, B01001000 },
  { B00000000, B01011000, B01010000, B01001000, B01011000 },
  { B00000000, B01011000, B01010000, B01011000, B01011000 },
  { B00000000, B01011000, B01001000, B01001000, B01001000 },
  { B00000000, B01011000, B01011000, B01011000, B01011000 },
  { B00000000, B01011000, B01011000, B01001000, B01011000 },
  { B00000000, B11011100, B01010100, B10010100, B11011100 },
  { B00000000, B01101000, B00101000, B01001000, B01101000 },
  { B00000000, B11011000, B01001000, B10010000, B11011000 },
  { B00011000, B11001000, B01011000, B10001000, B11011000 } };

void mode_pie(uint8_t action) {
  DateTime now;
  uint8_t  h, m, i, q, w, b;
  uint16_t t;

  if(action != ACTION_NONE) {
    // If we just arrived here (whether through mode change
    // or wake from sleep), initialize the matrix driver:
    if(action >= ACTION_HOLD_LEFT) {
      uint8_t depth = 4, plex = LED_PLEX_2;
      // Reduce depth/plex if battery voltage is low
      if(watch.getmV() < BATT_LOW_MV) {
        depth = 2;
        plex  = LED_PLEX_1;
      }
      // Reconfigure display if needed
      if((watch.getDepth() != depth) || (watch.getPlex() != plex))
        fps = watch.setDisplayMode(depth, plex, true);
    }
    // Reset sleep timeout on ANY button action
    watch.setTimeout(fps * 3);
  }

  now = RTC.now();
  h   = now.hour();
  m   = now.minute();

  watch.fillScreen(BACKGROUND);
  b = ((t = watch.getTimeout()) < sizeof(fade)) ?
      (uint8_t)pgm_read_byte(&fade[t]) : 255;
  for(i=1, q=0; i<=4; i++, q += 15) {
    if(m <= q)             w = 0;
    else if(m >= (q + 15)) w = 15;
    else                   w = m - q;
    blit(wedge, 64, 4, w * 4, 0, 4, 0, 4, 4, b);
    watch.setRotation(i & 3);
  }

  if(h24) {
    watch.drawBitmap(1, 1, digits24[h], 6, 5, 0);
  } else {
    if(h >= 12) h -= 12; // Value 0-11 = bitmaps if '12' through '11'
    watch.drawBitmap(2, 1, digits12[h], 5, 6, 0);
  }
}

