/*
INTERACTING WITH WATCH:
A button 'tap' is a quick press (a second or less).
A button 'hold' is a long press (2.5 seconds or longer).
Watch will start up in time display mode.

TIME DISPLAY MODE:
Hold left or right button to switch forward/back between clocks.
Some (but not all) clocks may use left or right button tap to switch display formats.
Hold both buttons to switch to time set mode.

TIME SET MODE:
Tap right button to increase value of current digit.
Tap left button to advance to next digit.
Hold both buttons to return to time display mode.
*/

#include <Wire.h>
#include <RTClib.h>
#include <Adafruit_GFX.h>
#include <Watch.h>
#include <avr/pgmspace.h>

#define MODE_SET  0
#define MODE_TIME 1

PROGMEM uint8_t img[] = {
  0x00,0x00,0x00,0x15,0x49,0x15,0xb6,0x23,0xb6,0xc8,0x15,0xc8,0x6d,0x15,0x6d,0x0a,0x23,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,
  0x49,0xff,0x49,0x98,0x49,0x98,0xff,0x00,0xff,0x6d,0x15,0x6d,0x2b,0x15,0x2b,0x00,0x00,0x00,0x00,0x49,0x00,0x00,0xff,0x00,
  0xff,0x00,0xff,0xff,0x00,0xff,0xb6,0x23,0xb6,0x2b,0x15,0x2b,0x06,0x15,0x06,0x00,0x23,0x00,0x00,0xff,0x00,0x00,0xff,0x00,
  0xff,0x00,0xff,0xff,0x00,0xff,0x48,0x23,0x48,0x06,0x15,0x06,0x00,0x15,0x00,0x00,0x7a,0x00,0x00,0xff,0x00,0x00,0xff,0x00,
  0xff,0x00,0xff,0x98,0x49,0x98,0x0a,0x23,0x0a,0x00,0x15,0x00,0x00,0x49,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0xff,0x00,
  0x49,0xff,0x49,0x15,0x49,0x15,0x00,0x00,0x00,0x00,0x49,0x00,0x00,0x97,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0xff,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x00,0x00,0x97,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x49,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7a,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x7a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x49,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x97,0x00,0x00,0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0xff,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x97,0x00,0x00,0x49,0x00,0x00,0x00,0x00,0x49,0x49,0x15,0xff,0xff,0x49,
  0x00,0xff,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x49,0x00,0x00,0x15,0x00,0x23,0x23,0x0a,0x49,0x49,0x98,0x00,0x00,0xff,
  0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x7a,0x00,0x00,0x15,0x00,0x15,0x15,0x06,0x23,0x23,0x48,0x15,0x49,0x98,0x49,0xff,0x49,
  0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x23,0x00,0x15,0x15,0x06,0x15,0x15,0x2b,0x48,0x7a,0x7a,0x98,0x49,0x15,0xff,0x00,0x00,
  0x00,0xff,0x00,0x00,0x49,0x00,0x00,0x00,0x00,0x15,0x15,0x2b,0x2b,0x49,0x49,0x48,0x23,0x48,0xff,0x49,0x49,0xff,0xff,0xff,
  0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x23,0x0a,0x2b,0x49,0x49,0x6d,0x49,0x49,0xb6,0x7a,0x48,0x49,0x49,0x49,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x23,0x48,0x6d,0x49,0x49,0x6d,0x49,0x6d,0x7a,0x23,0x23,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x49,0x49,0x15,0x48,0x7a,0x7a,0x6d,0x49,0x6d,0x6d,0x49,0x2b,0x23,0x23,0x23,0x00,0x00,0x00,0x00,0x00,0x00,
  0xff,0xff,0x49,0x49,0x49,0x98,0x48,0x23,0x48,0x6d,0x49,0x2b,0x49,0x15,0x15,0x00,0x00,0x00,0x49,0x49,0x15,0xff,0xff,0x49,
  0x00,0x00,0xff,0x15,0x49,0x98,0xb6,0x7a,0x48,0x49,0x15,0x15,0x15,0x15,0x15,0x23,0x23,0x0a,0x49,0x49,0x98,0x00,0x00,0xff,
  0x49,0xff,0x49,0x98,0x49,0x15,0x7a,0x23,0x23,0x15,0x15,0x15,0x15,0x15,0x06,0x23,0x23,0x48,0x00,0x49,0x98,0x00,0xff,0x49,
  0xff,0x00,0x00,0xff,0x49,0x49,0x23,0x23,0x23,0x15,0x15,0x06,0x15,0x15,0x2b,0x23,0x7a,0x7a,0x00,0x49,0x98,0x00,0x00,0xff,
  0xff,0xff,0xff,0x49,0x49,0x49,0x00,0x00,0x00,0x15,0x15,0x2b,0x15,0x49,0x49,0x00,0x23,0xb6,0x49,0x49,0x98,0xff,0xff,0x49,
  0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x23,0x0a,0x15,0x49,0x49,0x15,0x49,0x98,0x23,0x7a,0x7a,0x49,0x49,0x15,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x23,0x48,0x15,0x49,0x98,0x15,0x49,0x98,0x23,0x23,0x48,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x49,0x49,0x15,0x23,0x7a,0x7a,0x15,0x49,0x98,0x15,0x49,0x49,0x23,0x23,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,
  0xff,0xff,0x49,0x49,0x49,0x98,0x00,0x23,0xb6,0x15,0x49,0x49,0x15,0x15,0x2b,0x00,0x00,0x00,0x49,0x00,0x49,0xff,0x00,0xff,
  0x00,0x00,0xff,0x00,0x49,0x98,0x23,0x7a,0x7a,0x15,0x15,0x2b,0x15,0x15,0x06,0x23,0x00,0x23,0xff,0x00,0xff,0xff,0x00,0xff,
  0x00,0xff,0x49,0x00,0x49,0x98,0x23,0x23,0x48,0x15,0x15,0x06,0x15,0x00,0x15,0x7a,0x00,0x7a,0xff,0x49,0xff,0xff,0xff,0xff,
  0x00,0x00,0xff,0x49,0x49,0x98,0x23,0x23,0x0a,0x15,0x00,0x15,0x49,0x00,0x49,0xff,0x23,0xff,0x49,0x49,0xff,0x00,0x00,0xff,
  0xff,0xff,0x49,0x49,0x49,0x15,0x00,0x00,0x00,0x49,0x00,0x49,0x97,0x15,0x97,0x7a,0x23,0xff,0x00,0x00,0xff,0x00,0x00,0xff,
  0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x00,0x23,0x97,0x15,0x97,0x97,0x15,0xff,0x23,0x23,0xff,0x00,0x00,0x49,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x7a,0x00,0x7a,0x97,0x15,0xff,0x49,0x15,0xff,0x00,0x00,0x7a,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x49,0x00,0x49,0xff,0x23,0xff,0x49,0x15,0xff,0x15,0x15,0x97,0x00,0x00,0x23,0x00,0x00,0x00,0x00,0x00,0x00,
  0xff,0x00,0xff,0xff,0x00,0xff,0x7a,0x23,0xff,0x15,0x15,0x97,0x00,0x00,0x49,0x00,0x00,0x00,0x49,0x49,0x49,0xff,0xff,0xff,
  0xff,0x00,0xff,0xff,0x49,0xff,0x23,0x23,0xff,0x00,0x00,0x49,0x00,0x00,0x15,0x23,0x23,0x23,0xff,0x49,0x49,0xff,0x00,0x00,
  0xff,0xff,0xff,0x49,0x49,0xff,0x00,0x00,0x7a,0x00,0x00,0x15,0x15,0x15,0x15,0x7a,0x23,0x23,0xff,0x49,0x15,0xff,0xff,0x49,
  0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x23,0x15,0x15,0x15,0x49,0x15,0x15,0xff,0x7a,0x48,0x49,0x49,0x98,0x00,0x00,0xff,
  0x00,0x00,0xff,0x00,0x00,0x49,0x00,0x00,0x00,0x49,0x15,0x15,0x97,0x49,0x2b,0x7a,0x23,0x48,0x49,0x49,0x98,0xff,0xff,0x49,
  0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x23,0x23,0x97,0x49,0x2b,0x97,0x49,0x6d,0x7a,0x7a,0x7a,0x49,0x49,0x15,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x7a,0x23,0x23,0x97,0x49,0x6d,0x97,0x49,0x49,0x23,0x23,0x48,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x49,0x49,0x49,0xff,0x7a,0x48,0x97,0x49,0x49,0x49,0x49,0x49,0x23,0x23,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,
  0xff,0xff,0xff,0xff,0x49,0x49,0x7a,0x23,0x48,0x49,0x49,0x49,0x15,0x15,0x2b,0x00,0x00,0x00,0x15,0x49,0x49,0x49,0xff,0xff,
  0xff,0x00,0x00,0xff,0x49,0x15,0x7a,0x7a,0x7a,0x15,0x15,0x2b,0x15,0x15,0x06,0x0a,0x23,0x23,0x98,0x49,0x49,0xff,0x00,0x00,
  0xff,0xff,0x49,0x49,0x49,0x98,0x23,0x23,0x48,0x15,0x15,0x06,0x06,0x15,0x15,0x48,0x23,0x23,0xff,0x49,0x15,0xff,0xff,0x49,
  0x00,0x00,0xff,0x49,0x49,0x98,0x23,0x23,0x0a,0x06,0x15,0x15,0x2b,0x15,0x15,0xb6,0x7a,0x48,0xff,0x49,0x98,0xff,0x00,0xff,
  0xff,0xff,0x49,0x49,0x49,0x15,0x00,0x00,0x00,0x2b,0x15,0x15,0x6d,0x49,0x2b,0xff,0x23,0x48,0x98,0x49,0x98,0x49,0xff,0x49,
  0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x23,0x23,0x6d,0x49,0x2b,0xc8,0x49,0x6d,0xb6,0x7a,0x7a,0x15,0x49,0x15,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x23,0x23,0xc8,0x49,0x6d,0xc8,0x49,0x49,0x48,0x23,0x48,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x15,0x49,0x49,0xb6,0x7a,0x48,0xc8,0x49,0x49,0x6d,0x49,0x49,0x0a,0x23,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,
  0x49,0xff,0xff,0x98,0x49,0x49,0xff,0x23,0x48,0x6d,0x49,0x49,0x2b,0x15,0x2b,0x00,0x00,0x00,0x49,0x49,0x49,0xff,0xff,0xff,
  0xff,0x00,0x00,0xff,0x49,0x15,0xb6,0x7a,0x7a,0x2b,0x15,0x2b,0x06,0x15,0x06,0x23,0x23,0x23,0x49,0x49,0xff,0x00,0x00,0xff,
  0xff,0xff,0x49,0xff,0x49,0x98,0x48,0x23,0x48,0x06,0x15,0x06,0x15,0x15,0x15,0x23,0x23,0x7a,0x00,0x00,0xff,0x00,0x00,0xff,
  0xff,0x00,0xff,0x98,0x49,0x98,0x0a,0x23,0x0a,0x15,0x15,0x15,0x15,0x15,0x49,0x23,0x23,0xff,0x00,0x00,0xff,0x00,0x00,0xff,
  0x49,0xff,0x49,0x15,0x49,0x15,0x00,0x00,0x00,0x15,0x15,0x49,0x15,0x15,0x97,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0xff,
  0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x23,0x23,0x15,0x15,0x97,0x15,0x15,0xff,0x00,0x00,0xff,0x00,0x00,0x49,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x23,0x7a,0x15,0x15,0xff,0x00,0x00,0xff,0x00,0x00,0x7a,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x49,0x49,0x49,0x23,0x23,0xff,0x00,0x00,0xff,0x00,0x00,0x97,0x00,0x00,0x23,0x00,0x00,0x00,0x00,0x00,0x00,
  0xff,0xff,0xff,0x49,0x49,0xff,0x00,0x00,0xff,0x00,0x00,0x97,0x00,0x00,0x49,0x00,0x00,0x00,0x15,0x49,0x15,0x49,0xff,0x49,
  0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x49,0x00,0x00,0x15,0x0a,0x23,0x0a,0x98,0x49,0x98,0xff,0x00,0xff,
  0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x7a,0x00,0x00,0x15,0x06,0x15,0x06,0x48,0x23,0x48,0x98,0x49,0x98,0x49,0xff,0x49,
  0x00,0x00,0xff,0x00,0x00,0xff,0x00,0x00,0x23,0x06,0x15,0x06,0x2b,0x15,0x2b,0x7a,0x7a,0x7a,0x98,0x49,0x98,0xff,0x00,0xff,
  0x00,0x00,0xff,0x00,0x00,0x49,0x00,0x00,0x00,0x2b,0x15,0x2b,0x49,0x49,0x49,0xb6,0x23,0xb6,0x98,0x49,0x98,0x49,0xff,0x49,
  0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x23,0x0a,0x49,0x49,0x49,0x98,0x49,0x98,0x7a,0x7a,0x7a,0x15,0x49,0x15,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x23,0x48,0x98,0x49,0x98,0x98,0x49,0x98,0x48,0x23,0x48,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x15,0x49,0x15,0x7a,0x7a,0x7a,0x98,0x49,0x98,0x49,0x49,0x49,0x0a,0x23,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,
  0x49,0xff,0x49,0x98,0x49,0x98,0xb6,0x23,0xb6,0x49,0x49,0x49,0x2b,0x15,0x2b,0x00,0x00,0x00,0x15,0x49,0x15,0x49,0xff,0x49,
  0xff,0x00,0xff,0x98,0x49,0x98,0x7a,0x7a,0x7a,0x2b,0x15,0x2b,0x06,0x15,0x06,0x0a,0x23,0x0a,0x98,0x49,0x98,0xff,0x00,0xff,
  0x49,0xff,0x49,0x98,0x49,0x98,0x48,0x23,0x48,0x06,0x15,0x06,0x06,0x15,0x06,0x48,0x23,0x48,0x98,0x49,0xff,0x49,0xff,0xff,
  0xff,0x00,0xff,0x98,0x49,0x98,0x0a,0x23,0x0a,0x06,0x15,0x06,0x2b,0x15,0x2b,0x7a,0x7a,0xb6,0x15,0x49,0xff,0x00,0x00,0xff,
  0x49,0xff,0x49,0x15,0x49,0x15,0x00,0x00,0x00,0x2b,0x15,0x2b,0x49,0x49,0x6d,0x48,0x23,0xff,0x15,0x49,0x98,0x49,0xff,0x49,
  0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x23,0x0a,0x49,0x49,0x6d,0x49,0x49,0xc8,0x23,0x7a,0xb6,0x15,0x49,0x15,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x23,0x48,0x49,0x49,0xc8,0x49,0x49,0xc8,0x0a,0x23,0x48,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x15,0x49,0x15,0x7a,0x7a,0xb6,0x49,0x49,0xc8,0x15,0x49,0x6d,0x0a,0x23,0x0a,0x00,0x00,0x00,0x00,0x00,0x00,
  0x49,0xff,0x49,0x98,0x49,0x98,0x48,0x23,0xff,0x15,0x49,0x6d,0x06,0x15,0x2b,0x00,0x00,0x00,0x15,0x49,0x15,0x49,0xff,0x49,
  0xff,0x00,0xff,0x98,0x49,0xff,0x23,0x7a,0xb6,0x06,0x15,0x2b,0x06,0x15,0x06,0x0a,0x23,0x0a,0x98,0x49,0x98,0xff,0x00,0xff,
  0x49,0xff,0xff,0x15,0x49,0xff,0x0a,0x23,0x48,0x06,0x15,0x06,0x06,0x15,0x06,0x48,0x23,0x48,0xff,0x00,0xff,0xff,0x00,0xff,
  0x00,0x00,0xff,0x15,0x49,0x98,0x0a,0x23,0x0a,0x06,0x15,0x06,0x2b,0x15,0x2b,0xb6,0x23,0xb6,0xff,0x00,0xff,0xff,0x00,0xff,
  0x49,0xff,0x49,0x15,0x49,0x15,0x00,0x00,0x00,0x2b,0x15,0x2b,0x6d,0x15,0x6d,0xff,0x00,0xff,0x98,0x49,0x98,0x49,0xff,0x49,
  0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x23,0x0a,0x6d,0x15,0x6d,0xc8,0x15,0xc8,0xb6,0x23,0xb6,0x15,0x49,0x15,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x23,0x48,0xc8,0x15,0xc8,0xc8,0x15,0xc8,0x48,0x23,0x48,0x00,0x00,0x00,0x00,0x00,0x00 };

void (*modeFunc[])(void) = {
  mode_set,
  mode_time
};

Watch      watch(true); // Use double-buffered animation
RTC_DS1307 RTC;
uint8_t    mode = MODE_TIME;

void setup() {
  Serial.begin(9600);
  Wire.begin();
  RTC.begin();
  watch.begin();
}

void loop() {
  (*modeFunc[mode])();
}

void mode_set() {
  static uint8_t digit = 0;

  uint8_t n = watch.action();
  if(n == ACTION_HOLD_BOTH) {
    mode = MODE_TIME;
    return;
  }

  if(n == ACTION_TAP_RIGHT) {
    for(uint8_t i=0;i<8;i++) {
      watch.fillScreen(0);
      blit(i * 3,digit*8,2,0,3,8);
      watch.swapBuffers();
      watch.delay(1);
    }
    if(++digit > 9) digit = 0;
  } else {
    watch.fillScreen(0);
    blit(0,digit*8,2,0,3,8);
    watch.swapBuffers();
  }


// blit(x, y, x2, y2, w, h);
/*
  watch.fillScreen(0);
  watch.setTextColor(255);
  watch.setCursor(1, 0);
  if     (n == ACTION_TAP_LEFT)   watch.print('l');
  else if(n == ACTION_TAP_RIGHT)  watch.print('r');
  else if(n == ACTION_HOLD_LEFT)  watch.print('L');
  else if(n == ACTION_HOLD_RIGHT) watch.print('R');
  else                            watch.print('_');
  watch.swapBuffers();
  if(n != ACTION_NONE) watch.delay(15);
*/
}

void blit(int sx, int sy, int dx, int dy, int w, int h) {
  int x, y;
  for(y=0; y<h; y++) {
    for(x=0;x<w;x++) {
      watch.drawPixel(dx + x, dy + y, pgm_read_byte(&img[(sy + y) * 24 + sx + x]));
    }
  }
}

void mode_time() {
  uint8_t n = watch.action();

  if(n == ACTION_HOLD_BOTH) {
    mode = MODE_SET;
    return;
  }

  static int textX = 8;
  char       str[9];
  DateTime   now;

  now = RTC.now();
  sprintf(str,"%02d:%02d:%02d",
    now.hour(),
    now.minute(),
    now.second());
  watch.fillScreen(0);
  watch.setTextWrap(false);
  watch.setTextColor(255);
  watch.setCursor(textX, 0);
  watch.print(str);
  watch.swapBuffers();
  watch.delay(2);
  if(--textX < -52) textX = 8;
}

